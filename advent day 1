const WORDS: [&str; 9] = ["one", "two", "three", "four", "five", "six", "seven", "eight", "nine"];
const NUMS: [&str; 9] = ["1","2","3","4","5","6","7","8","9"];

fn main() {
    let string = String::from("two1nine");
    
    println!("{}", easy(string))
    println!("{}", hard(string))
}

fn easy(string: String) -> String {
    let mut new = String::new();
    for c in string.chars() {
        if c.is_ascii_digit() {
            new.push(c);
        }
    }
    new
}

fn hard(string: String) -> String {
    let len = string.len();
    let mut new = String::new();
    for i in 0..len {
         if string.chars().nth(i).unwrap().is_ascii_digit() {
            new.push(string.chars().nth(i).unwrap());
            continue;
        }
        for j in 3..=5 {
            if i + j <= len {
                for k in 0..WORDS.len() {
                    if &string[i..i+j] == WORDS[k] {
                        new.push_str(NUMS[k]);
                    }
                }
            } else {
                break;
            }
        }
    }
    new
}
